{
  "manifestVersion": "3.1",
  "impls": {
    "a0831f8804936acf4c114b6a23141323d07d30df53f6d1806fcae907655400f0": {
      "address": "0x6957d383513A42248bbF3613547f7400Ab70E2B4",
      "txHash": "0xed38627e8324340443d55c87c076f1d4c813938b8955bfaf31a25e23f84aefd4",
      "layout": {
        "storage": [
          {
            "contract": "IBZVestingStorage",
            "label": "frozenWallets",
            "type": "t_mapping(t_address,t_struct(FrozenWallet)1749_storage)",
            "src": "../project:/.coverage_contracts/IBZVestingStorage.sol:26"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "vestingTypes",
            "type": "t_array(t_struct(VestingType)1760_storage)dyn_storage",
            "src": "../project:/.coverage_contracts/IBZVestingStorage.sol:27"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:37"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_address,t_struct(FrozenWallet)1749_storage)": {
            "label": "mapping(address => struct IBZVestingStorage.FrozenWallet)"
          },
          "t_struct(FrozenWallet)1749_storage": {
            "label": "struct IBZVestingStorage.FrozenWallet",
            "members": [
              {
                "label": "wallet",
                "type": "t_address"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAmount",
                "type": "t_uint256"
              },
              {
                "label": "initialAmount",
                "type": "t_uint256"
              },
              {
                "label": "startDay",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "scheduled",
                "type": "t_bool"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(VestingType)1760_storage)dyn_storage": {
            "label": "struct IBZVestingStorage.VestingType[]"
          },
          "t_struct(VestingType)1760_storage": {
            "label": "struct IBZVestingStorage.VestingType",
            "members": [
              {
                "label": "monthlyRate",
                "type": "t_uint256"
              },
              {
                "label": "initialRate",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              },
              {
                "label": "vesting",
                "type": "t_bool"
              }
            ]
          }
        }
      }
    },
    "3b0ce1c49f4b4152ade1ace45dc075ee548b1ff65d7c115222c0c69cc9a13320": {
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "txHash": "0x8b7cb17a2d7e2cd45204bc89ab112c99197d3f8cfdf876e3fba3d727994c38a8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "30d0f9708f67102ccfe644403c6699a1c7743eaf1e6a3498d738ac8c7641026c": {
      "address": "0xe982E462b094850F12AF94d21D470e21bE9D0E9C",
      "txHash": "0xd4dd6625809be594309029923e476c0de70c0c559954aae1e171fa2283270680",
      "layout": {
        "storage": [
          {
            "contract": "IBZVestingStorage",
            "label": "releaseTime",
            "type": "t_uint256",
            "src": "IBZVestingStorage.sol:24"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "tokenToBeVested",
            "type": "t_address",
            "src": "IBZVestingStorage.sol:25"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "frozenWallets",
            "type": "t_mapping(t_address,t_struct(FrozenWallet)852_storage)",
            "src": "IBZVestingStorage.sol:27"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "vestingTypes",
            "type": "t_array(t_struct(VestingType)863_storage)dyn_storage",
            "src": "IBZVestingStorage.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:37"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_address,t_struct(FrozenWallet)852_storage)": {
            "label": "mapping(address => struct IBZVestingStorage.FrozenWallet)"
          },
          "t_struct(FrozenWallet)852_storage": {
            "label": "struct IBZVestingStorage.FrozenWallet",
            "members": [
              {
                "label": "wallet",
                "type": "t_address"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAmount",
                "type": "t_uint256"
              },
              {
                "label": "initialAmount",
                "type": "t_uint256"
              },
              {
                "label": "startDay",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "scheduled",
                "type": "t_bool"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(VestingType)863_storage)dyn_storage": {
            "label": "struct IBZVestingStorage.VestingType[]"
          },
          "t_struct(VestingType)863_storage": {
            "label": "struct IBZVestingStorage.VestingType",
            "members": [
              {
                "label": "monthlyRate",
                "type": "t_uint256"
              },
              {
                "label": "initialRate",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              },
              {
                "label": "vesting",
                "type": "t_bool"
              }
            ]
          }
        }
      }
    },
    "a8ba63f11c6963cac1d4679b3f36d2a8d33ae88ca2d9fb1c1696f7b1851c033e": {
      "address": "0x71E02441209d3dd9Ed064A4E4EafAf90D0263088",
      "txHash": "0xfcf4e53443d048604c418d20370c2d5c8d796c8a5033117220783e53d5fc5474",
      "layout": {
        "storage": [
          {
            "contract": "IBZVestingStorage",
            "label": "releaseTime",
            "type": "t_uint256",
            "src": "IBZVestingStorage.sol:24"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "tokenToBeVested",
            "type": "t_address",
            "src": "IBZVestingStorage.sol:25"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "frozenWallets",
            "type": "t_mapping(t_address,t_struct(FrozenWallet)854_storage)",
            "src": "IBZVestingStorage.sol:27"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "vestingTypes",
            "type": "t_array(t_struct(VestingType)865_storage)dyn_storage",
            "src": "IBZVestingStorage.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:37"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_address,t_struct(FrozenWallet)854_storage)": {
            "label": "mapping(address => struct IBZVestingStorage.FrozenWallet)"
          },
          "t_struct(FrozenWallet)854_storage": {
            "label": "struct IBZVestingStorage.FrozenWallet",
            "members": [
              {
                "label": "wallet",
                "type": "t_address"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAmount",
                "type": "t_uint256"
              },
              {
                "label": "initialAmount",
                "type": "t_uint256"
              },
              {
                "label": "startDay",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "scheduled",
                "type": "t_bool"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(VestingType)865_storage)dyn_storage": {
            "label": "struct IBZVestingStorage.VestingType[]"
          },
          "t_struct(VestingType)865_storage": {
            "label": "struct IBZVestingStorage.VestingType",
            "members": [
              {
                "label": "monthlyRate",
                "type": "t_uint256"
              },
              {
                "label": "initialRate",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              },
              {
                "label": "vesting",
                "type": "t_bool"
              }
            ]
          }
        }
      }
    },
    "407f7ae3d27465278a3a3229e9c4cf8298708fb756c6bfe7eed4bc695fec3117": {
      "address": "0x4A1D2A5060C782049Ef966d9412f1239E95183b7",
      "txHash": "0x87d12a45a467010c4042ea0f05e2d5a4cd5a0d69a3a3807ac8f216095f39fd8a",
      "layout": {
        "storage": [
          {
            "contract": "IBZVestingStorage",
            "label": "releaseTime",
            "type": "t_uint256",
            "src": "IBZVestingStorage.sol:24"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "tokenToBeVested",
            "type": "t_address",
            "src": "IBZVestingStorage.sol:25"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "frozenWallets",
            "type": "t_mapping(t_address,t_struct(FrozenWallet)857_storage)",
            "src": "IBZVestingStorage.sol:27"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "vestingTypes",
            "type": "t_array(t_struct(VestingType)868_storage)dyn_storage",
            "src": "IBZVestingStorage.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:37"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_address,t_struct(FrozenWallet)857_storage)": {
            "label": "mapping(address => struct IBZVestingStorage.FrozenWallet)"
          },
          "t_struct(FrozenWallet)857_storage": {
            "label": "struct IBZVestingStorage.FrozenWallet",
            "members": [
              {
                "label": "wallet",
                "type": "t_address"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAmount",
                "type": "t_uint256"
              },
              {
                "label": "initialAmount",
                "type": "t_uint256"
              },
              {
                "label": "startDay",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "scheduled",
                "type": "t_bool"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(VestingType)868_storage)dyn_storage": {
            "label": "struct IBZVestingStorage.VestingType[]"
          },
          "t_struct(VestingType)868_storage": {
            "label": "struct IBZVestingStorage.VestingType",
            "members": [
              {
                "label": "monthlyRate",
                "type": "t_uint256"
              },
              {
                "label": "initialRate",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              },
              {
                "label": "vesting",
                "type": "t_bool"
              }
            ]
          }
        }
      }
    },
    "34b127e7347e66b9862986a593d98acc5460e64da9b4aee5f9693636aca7bae5": {
      "address": "0xF3Ecf410c2f4EF71691F63E409300f85c16c4f33",
      "txHash": "0x2617b16a8d21d742fc9f053e838c155680dbf6e0f088d71de31e9356f1d0d9a6",
      "layout": {
        "storage": [
          {
            "contract": "IBZVestingStorage",
            "label": "releaseTime",
            "type": "t_uint256",
            "src": "IBZVestingStorage.sol:24"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "tokenToBeVested",
            "type": "t_address",
            "src": "IBZVestingStorage.sol:25"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "frozenWallets",
            "type": "t_mapping(t_address,t_struct(FrozenWallet)848_storage)",
            "src": "IBZVestingStorage.sol:27"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "vestingTypes",
            "type": "t_array(t_struct(VestingType)859_storage)dyn_storage",
            "src": "IBZVestingStorage.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:37"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_address,t_struct(FrozenWallet)848_storage)": {
            "label": "mapping(address => struct IBZVestingStorage.FrozenWallet)"
          },
          "t_struct(FrozenWallet)848_storage": {
            "label": "struct IBZVestingStorage.FrozenWallet",
            "members": [
              {
                "label": "wallet",
                "type": "t_address"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAmount",
                "type": "t_uint256"
              },
              {
                "label": "initialAmount",
                "type": "t_uint256"
              },
              {
                "label": "startDay",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "scheduled",
                "type": "t_bool"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(VestingType)859_storage)dyn_storage": {
            "label": "struct IBZVestingStorage.VestingType[]"
          },
          "t_struct(VestingType)859_storage": {
            "label": "struct IBZVestingStorage.VestingType",
            "members": [
              {
                "label": "monthlyRate",
                "type": "t_uint256"
              },
              {
                "label": "initialRate",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              },
              {
                "label": "vesting",
                "type": "t_bool"
              }
            ]
          }
        }
      }
    },
    "6c48c9b6fb3eeec62d7246f16ea0a24ad9e41d6d17045ebad13ae82f1af145e2": {
      "address": "0x2958897D76861ad299D668ebFddB064d9947A023",
      "txHash": "0x9562d12c415914a4a1e84269566b8bd16c48cf635b5da106a4e3a83b7a5aaec7",
      "layout": {
        "storage": [
          {
            "contract": "IBZVestingStorage",
            "label": "releaseTime",
            "type": "t_uint256",
            "src": "IBZVestingStorage.sol:24"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "tokenToBeVested",
            "type": "t_address",
            "src": "IBZVestingStorage.sol:25"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "frozenWallets",
            "type": "t_mapping(t_address,t_struct(FrozenWallet)853_storage)",
            "src": "IBZVestingStorage.sol:27"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "vestingTypes",
            "type": "t_array(t_struct(VestingType)864_storage)dyn_storage",
            "src": "IBZVestingStorage.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:37"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_address,t_struct(FrozenWallet)853_storage)": {
            "label": "mapping(address => struct IBZVestingStorage.FrozenWallet)"
          },
          "t_struct(FrozenWallet)853_storage": {
            "label": "struct IBZVestingStorage.FrozenWallet",
            "members": [
              {
                "label": "wallet",
                "type": "t_address"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAmount",
                "type": "t_uint256"
              },
              {
                "label": "initialAmount",
                "type": "t_uint256"
              },
              {
                "label": "startDay",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "scheduled",
                "type": "t_bool"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(VestingType)864_storage)dyn_storage": {
            "label": "struct IBZVestingStorage.VestingType[]"
          },
          "t_struct(VestingType)864_storage": {
            "label": "struct IBZVestingStorage.VestingType",
            "members": [
              {
                "label": "monthlyRate",
                "type": "t_uint256"
              },
              {
                "label": "initialRate",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              },
              {
                "label": "vesting",
                "type": "t_bool"
              }
            ]
          }
        }
      }
    },
    "68cf105230e78dc759255a35c4d0188bfa761ae930db3d0e04d83af864354fb2": {
      "address": "0xD833215cBcc3f914bD1C9ece3EE7BF8B14f841bb",
      "txHash": "0x60dd4b560ec5a886e6dd6762b008d941a5bcb02a3d346fec2f2af054a9e07354",
      "layout": {
        "storage": [
          {
            "contract": "IBZVestingStorage",
            "label": "releaseTime",
            "type": "t_uint256",
            "src": "IBZVestingStorage.sol:24"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "tokenToBeVested",
            "type": "t_address",
            "src": "IBZVestingStorage.sol:25"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "frozenWallets",
            "type": "t_mapping(t_address,t_struct(FrozenWallet)828_storage)",
            "src": "IBZVestingStorage.sol:27"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "vestingTypes",
            "type": "t_array(t_struct(VestingType)839_storage)dyn_storage",
            "src": "IBZVestingStorage.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:37"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_address,t_struct(FrozenWallet)828_storage)": {
            "label": "mapping(address => struct IBZVestingStorage.FrozenWallet)"
          },
          "t_struct(FrozenWallet)828_storage": {
            "label": "struct IBZVestingStorage.FrozenWallet",
            "members": [
              {
                "label": "wallet",
                "type": "t_address"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAmount",
                "type": "t_uint256"
              },
              {
                "label": "initialAmount",
                "type": "t_uint256"
              },
              {
                "label": "startDay",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "scheduled",
                "type": "t_bool"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(VestingType)839_storage)dyn_storage": {
            "label": "struct IBZVestingStorage.VestingType[]"
          },
          "t_struct(VestingType)839_storage": {
            "label": "struct IBZVestingStorage.VestingType",
            "members": [
              {
                "label": "monthlyRate",
                "type": "t_uint256"
              },
              {
                "label": "initialRate",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              },
              {
                "label": "vesting",
                "type": "t_bool"
              }
            ]
          }
        }
      }
    },
    "3cff43c36792f1a0f5fdc62729f5019028af7f21ba256bba24faaa36a33ffd59": {
      "address": "0x1b88Bdb8269A1aB1372459F5a4eC3663D6f5cCc4",
      "txHash": "0x29856f17c766756ac76db7cdeffc2895c479fbaa11b7c3dd99b5bc6cc6895fd8",
      "layout": {
        "storage": [
          {
            "contract": "IBZVestingStorage",
            "label": "releaseTime",
            "type": "t_uint256",
            "src": "IBZVestingStorage.sol:24"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "tokenToBeVested",
            "type": "t_address",
            "src": "IBZVestingStorage.sol:25"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "frozenWallets",
            "type": "t_mapping(t_address,t_struct(FrozenWallet)831_storage)",
            "src": "IBZVestingStorage.sol:27"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "vestingTypes",
            "type": "t_array(t_struct(VestingType)842_storage)dyn_storage",
            "src": "IBZVestingStorage.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:37"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_address,t_struct(FrozenWallet)831_storage)": {
            "label": "mapping(address => struct IBZVestingStorage.FrozenWallet)"
          },
          "t_struct(FrozenWallet)831_storage": {
            "label": "struct IBZVestingStorage.FrozenWallet",
            "members": [
              {
                "label": "wallet",
                "type": "t_address"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAmount",
                "type": "t_uint256"
              },
              {
                "label": "initialAmount",
                "type": "t_uint256"
              },
              {
                "label": "startDay",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "scheduled",
                "type": "t_bool"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(VestingType)842_storage)dyn_storage": {
            "label": "struct IBZVestingStorage.VestingType[]"
          },
          "t_struct(VestingType)842_storage": {
            "label": "struct IBZVestingStorage.VestingType",
            "members": [
              {
                "label": "monthlyRate",
                "type": "t_uint256"
              },
              {
                "label": "initialRate",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              },
              {
                "label": "vesting",
                "type": "t_bool"
              }
            ]
          }
        }
      }
    },
    "e96c32bd529dd9a0c5338e8d81d209a199a89ddf71c18a992f739b9f33abf5a0": {
      "address": "0x25AF99b922857C37282f578F428CB7f34335B379",
      "txHash": "0x1819999afcab17ad8bbc20ef881ba44531e5e8091fbdd85c1e6c57c826646429",
      "layout": {
        "storage": [
          {
            "contract": "IBZVestingStorage",
            "label": "releaseTime",
            "type": "t_uint256",
            "src": "IBZVestingStorage.sol:24"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "tokenToBeVested",
            "type": "t_address",
            "src": "IBZVestingStorage.sol:25"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "frozenWallets",
            "type": "t_mapping(t_address,t_struct(FrozenWallet)796_storage)",
            "src": "IBZVestingStorage.sol:27"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "vestingTypes",
            "type": "t_array(t_struct(VestingType)807_storage)dyn_storage",
            "src": "IBZVestingStorage.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(FrozenWallet)796_storage)": {
            "label": "mapping(address => struct IBZVestingStorage.FrozenWallet)"
          },
          "t_struct(FrozenWallet)796_storage": {
            "label": "struct IBZVestingStorage.FrozenWallet",
            "members": [
              {
                "label": "wallet",
                "type": "t_address"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAmount",
                "type": "t_uint256"
              },
              {
                "label": "initialAmount",
                "type": "t_uint256"
              },
              {
                "label": "startDay",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(VestingType)807_storage)dyn_storage": {
            "label": "struct IBZVestingStorage.VestingType[]"
          },
          "t_struct(VestingType)807_storage": {
            "label": "struct IBZVestingStorage.VestingType",
            "members": [
              {
                "label": "monthlyRate",
                "type": "t_uint256"
              },
              {
                "label": "initialRate",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              },
              {
                "label": "vesting",
                "type": "t_bool"
              }
            ]
          }
        }
      }
    },
    "19d7f68d2ee8817bc3c93917460f53024ce19a749e46ffba75290222d5e6eb66": {
      "address": "0x10fB2Ab116E2Eb3a8B5a1Ca912E05f63c3D969E4",
      "txHash": "0xcbb460f7ee854fc4cf8139df137585901c30f937fff0ca25e70a00f09d39d83b",
      "layout": {
        "storage": [
          {
            "contract": "IBZVestingStorage",
            "label": "releaseTime",
            "type": "t_uint256",
            "src": "IBZVestingStorage.sol:24"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "tokenToBeVested",
            "type": "t_address",
            "src": "IBZVestingStorage.sol:25"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "frozenWallets",
            "type": "t_mapping(t_address,t_struct(FrozenWallet)796_storage)",
            "src": "IBZVestingStorage.sol:27"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "vestingTypes",
            "type": "t_array(t_struct(VestingType)807_storage)dyn_storage",
            "src": "IBZVestingStorage.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(FrozenWallet)796_storage)": {
            "label": "mapping(address => struct IBZVestingStorage.FrozenWallet)"
          },
          "t_struct(FrozenWallet)796_storage": {
            "label": "struct IBZVestingStorage.FrozenWallet",
            "members": [
              {
                "label": "wallet",
                "type": "t_address"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAmount",
                "type": "t_uint256"
              },
              {
                "label": "initialAmount",
                "type": "t_uint256"
              },
              {
                "label": "startDay",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(VestingType)807_storage)dyn_storage": {
            "label": "struct IBZVestingStorage.VestingType[]"
          },
          "t_struct(VestingType)807_storage": {
            "label": "struct IBZVestingStorage.VestingType",
            "members": [
              {
                "label": "monthlyRate",
                "type": "t_uint256"
              },
              {
                "label": "initialRate",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              },
              {
                "label": "vesting",
                "type": "t_bool"
              }
            ]
          }
        }
      }
    },
    "457af066e040813d47176c605d654bede0ab63c8a8da02f2d2454bc6cd941a6e": {
      "address": "0xe5608e4945998aB5E4548Bc95b421E188095DA8E",
      "txHash": "0xe253ec8bbfb238cbaf7cb1dd0af4218e855a7385f01707d4e5436c60ce9f5d63",
      "layout": {
        "storage": [
          {
            "contract": "IBZVestingStorage",
            "label": "releaseTime",
            "type": "t_uint256",
            "src": "IBZVestingStorage.sol:24"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "tokenToBeVested",
            "type": "t_address",
            "src": "IBZVestingStorage.sol:25"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "frozenWallets",
            "type": "t_mapping(t_address,t_struct(FrozenWallet)793_storage)",
            "src": "IBZVestingStorage.sol:27"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "vestingTypes",
            "type": "t_array(t_struct(VestingType)804_storage)dyn_storage",
            "src": "IBZVestingStorage.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(FrozenWallet)793_storage)": {
            "label": "mapping(address => struct IBZVestingStorage.FrozenWallet)"
          },
          "t_struct(FrozenWallet)793_storage": {
            "label": "struct IBZVestingStorage.FrozenWallet",
            "members": [
              {
                "label": "wallet",
                "type": "t_address"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAmount",
                "type": "t_uint256"
              },
              {
                "label": "initialAmount",
                "type": "t_uint256"
              },
              {
                "label": "startDay",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(VestingType)804_storage)dyn_storage": {
            "label": "struct IBZVestingStorage.VestingType[]"
          },
          "t_struct(VestingType)804_storage": {
            "label": "struct IBZVestingStorage.VestingType",
            "members": [
              {
                "label": "monthlyRate",
                "type": "t_uint256"
              },
              {
                "label": "initialRate",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              },
              {
                "label": "vesting",
                "type": "t_bool"
              }
            ]
          }
        }
      }
    },
    "95727b466b05c2f7b07d673e09e15b0e3d24ccd0126f55d518e6836e2231b498": {
      "address": "0x46E3D301e211d2A2D3148412FCA5788F3182908d",
      "txHash": "0xfaa17277b536e75cc03f4d124f827016cbd5b877879c445f0d0976ac8c0b52a0",
      "layout": {
        "storage": [
          {
            "contract": "IBZVestingStorage",
            "label": "releaseTime",
            "type": "t_uint256",
            "src": "IBZVestingStorage.sol:24"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "tokenToBeVested",
            "type": "t_address",
            "src": "IBZVestingStorage.sol:25"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "frozenWallets",
            "type": "t_mapping(t_address,t_struct(FrozenWallet)793_storage)",
            "src": "IBZVestingStorage.sol:27"
          },
          {
            "contract": "IBZVestingStorage",
            "label": "vestingTypes",
            "type": "t_array(t_struct(VestingType)804_storage)dyn_storage",
            "src": "IBZVestingStorage.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../lib/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(FrozenWallet)793_storage)": {
            "label": "mapping(address => struct IBZVestingStorage.FrozenWallet)"
          },
          "t_struct(FrozenWallet)793_storage": {
            "label": "struct IBZVestingStorage.FrozenWallet",
            "members": [
              {
                "label": "wallet",
                "type": "t_address"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256"
              },
              {
                "label": "monthlyAmount",
                "type": "t_uint256"
              },
              {
                "label": "initialAmount",
                "type": "t_uint256"
              },
              {
                "label": "startDay",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(VestingType)804_storage)dyn_storage": {
            "label": "struct IBZVestingStorage.VestingType[]"
          },
          "t_struct(VestingType)804_storage": {
            "label": "struct IBZVestingStorage.VestingType",
            "members": [
              {
                "label": "monthlyRate",
                "type": "t_uint256"
              },
              {
                "label": "initialRate",
                "type": "t_uint256"
              },
              {
                "label": "afterDays",
                "type": "t_uint256"
              },
              {
                "label": "monthsDelay",
                "type": "t_uint256"
              },
              {
                "label": "vesting",
                "type": "t_bool"
              }
            ]
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B",
    "txHash": "0xf27c87da0974dcc68a75c7bedc652c72fc6a1fdfb59716d013d2fcd70f53aeb9"
  }
}
